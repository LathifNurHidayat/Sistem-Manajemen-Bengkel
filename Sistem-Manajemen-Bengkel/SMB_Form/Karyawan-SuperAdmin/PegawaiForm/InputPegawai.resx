<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureProfiles.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tAVwutQAAAAASUVORK5CYII=
</value>
  </data>
</root>